const { chromium } = require('playwright');
const fs = require('fs');
async function getAndSaveBingCookie() {
    console.log('üöÄ Launching browser to fetch a fresh Bing cookie...');
    const browser = await chromium.launch({ headless: true });
    const context = await browser.newContext({
        userAgent: 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/112.0.0.0 Safari/537.36',
    });
    const page = await context.newPage();
    try {
        await page.goto('https://www.bing.com', { waitUntil: 'domcontentloaded' });
        console.log('‚úÖ Navigated to Bing.com');

        // ÂÖ≥ÈîÆÊ≠•È™§: Â§ÑÁêÜ Cookie ÂêåÊÑèÂºπÁ™ó
        const acceptButtonSelector = '#bnp_btn_accept';
        try {
            // Á≠âÂæÖÊåâÈíÆÂá∫Áé∞ÔºåÂ¶ÇÊûú3ÁßíÂÜÖÊ≤°Âá∫Áé∞Â∞±ËÆ§‰∏∫ÂÆÉ‰∏çÂ≠òÂú®
            await page.waitForSelector(acceptButtonSelector, { timeout: 3000 });
            await page.click(acceptButtonSelector);
            console.log('‚úÖ Cookie consent banner accepted.');
        } catch (error) {
            console.log('‚ÑπÔ∏è Cookie consent banner not found, continuing...');
        }

        // Á≠âÂæÖÁΩëÁªúÁ®≥ÂÆöÔºåÁ°Æ‰øùÂàùÂßã Cookie Â∑≤ËÆæÁΩÆ
        await page.waitForLoadState('networkidle');

        // ÊâßË°å‰∏ÄÊ¨°ÊêúÁ¥¢Êù•Ëé∑ÂèñÊõ¥ÂÆåÊï¥ÁöÑ Cookie
        console.log('Performing a search to get all necessary cookies...');
        await page.fill('input[name="q"]', 'hello world');
        await page.press('input[name="q"]', 'Enter');

        // Á≠âÂæÖÊêúÁ¥¢ÁªìÊûúÈ°µÈù¢Âä†ËΩΩ
        await page.waitForSelector('.b_algo', { timeout: 10000 });
        console.log('‚úÖ Search results loaded.');

        const cookies = await context.cookies();
        const cookieString = cookies.map(c => `${c.name}=${c.value}`).join('; ');

        if (!cookieString || cookies.length < 5) {
            throw new Error(`Failed to get a sufficient number of cookies. Found: ${cookies.length}`);
        }

        console.log(`üç™ Successfully fetched ${cookies.length} cookies.`);

        // ÂáÜÂ§áË¶ÅÂ≠òÂÖ• Gist ÁöÑÊúÄÁªà JSON ÂÜÖÂÆπ
        const output = {
            cookie: cookieString,
            // ‰øùÁïô‰∏Ä‰∫õÊúâÁî®ÁöÑÂÖÉÊï∞ÊçÆ
            timestamp: new Date().toISOString(),
            cookieCount: cookies.length,
            // Ê£ÄÊü•ÊòØÂê¶ÂåÖÂê´ÂÖ≥ÈîÆÁöÑ MUID cookie
            hasMuid: cookies.some(c => c.name === 'MUID'),
        };

        // ÂÜôÂÖ•Êñá‰ª∂Ôºå‰æõ‰∏ã‰∏ÄÊ≠•‰ΩøÁî®
        fs.writeFileSync('bing_cookies.json', JSON.stringify(output, null, 2));
        console.log('‚úÖ Cookie data saved to bing_cookies.json');

    } catch (error) {
        console.error('‚ùå An error occurred during the Playwright script execution:', error);
        // Âç≥‰ΩøÂ§±Ë¥•Ôºå‰πüÂàõÂª∫‰∏Ä‰∏™ÈîôËØØÊñá‰ª∂Ôºå‰ª•‰æøË∞ÉËØï
        fs.writeFileSync('bing_cookies.json', JSON.stringify({ error: error.message, timestamp: new Date().toISOString() }, null, 2));
        process.exit(1); // Â§±Ë¥•ÈÄÄÂá∫
    } finally {
        await browser.close();
    }
}

// ÊâßË°åÂáΩÊï∞
getAndSaveBingCookie().catch(error => {
    console.error('‚ùå Error executing the script:', error);
    process.exit(1);
});
